apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: redis-l1
spec:
  clusterIP: None
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
  selector:
    name: redis-l1
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  namespace: default
  name: redis-l1
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: services
      app.kubernetes.io/name: redis-l1
      name: redis-l1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: default
  name: redis-l1
  labels:
    app.kubernetes.io/component: services
    app.kubernetes.io/name: redis-l1
    name: redis-l1
spec:
  serviceName: redis-l1
  replicas: 1
  selector:
    matchLabels:
      name: redis-l1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: services
        app.kubernetes.io/name: redis-l1
        name: redis-l1
      annotations:
        kubectl.kubernetes.io/default-container: redis-l1
    spec:
      priorityClassName: redis-l1
      containers:
        - name: redis-l1
          image: redis:7.0.8-alpine
          command: ["redis-server"]
          args: ["/config/redis-l1.conf"]
          ports:
            - containerPort: 6379
              name: redis
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 5
            failureThreshold: 5
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - redis-cli ping | grep PONG
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 3
          resources:
            requests:
              cpu: 1.0
              memory: 4Gi
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /config
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          securityContext:
            runAsUser: 59000
            runAsGroup: 59000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 9121
      volumes:
        - name: data
          ephemeral:
            volumeClaimTemplate:
              metadata:
                labels:
                  type: redis-hfc-l1-data
              spec:
                accessModes: ["ReadWriteOnce"]
                storageClassName: "premium-rwo"
                resources:
                  requests:
                    storage: 20Gi
        - name: config
          configMap:
            name: redis-l1-conf
            items:
              - key: config
                path: redis-l1.conf