apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: redis
spec:
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
  selector:
    name: redis
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  namespace: default
  name: redis
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: services
      app.kubernetes.io/name: redis
      name: redis
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: default
  name: redis
  labels:
    app.kubernetes.io/component: services
    app.kubernetes.io/name: redis
    name: redis
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/component: services
        app.kubernetes.io/name: redis
        name: redis
      annotations:
        kubectl.kubernetes.io/default-container: redis
    spec:
      priorityClassName: redis
      containers:
        - name: redis
          image: redis:7.0.8-alpine
          command: ["redis-server"]
          args: ["/data/redis.conf"]
          ports:
            - containerPort: 6379
              name: redis
          resources:
            requests:
              cpu: 2.0
              memory: 10Gi
          volumeMounts:
            - name: data
              mountPath: /data
        - name: redis-exporter
          image: oliver006/redis_exporter:latest
          securityContext:
            runAsUser: 59000
            runAsGroup: 59000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
            - containerPort: 9121
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-redis-0
