apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: default
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
      namespace: default
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-await: enabled
        config.linkerd.io/skip-outbound-ports: "6379"
        config.linkerd.io/skip-subnets: 169.254.169.254/32
    spec:
      serviceAccountName: zones-backend
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:9.4.3-ubuntu
          env:
            - name: GF_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-sql
                  key: username
            - name: GF_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-sql
                  key: password
            - name: GF_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: grafana-sql
                  key: database
            - name: GF_INSTALL_PLUGINS
              value: "grafana-bigquery-datasource,redis-app"
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1
              memory: 2G
          volumeMounts:
            - mountPath: /etc/grafana
              name: grafana-config
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasource
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.28.0
          command:
            - "/cloud_sql_proxy"
            - "-ip_address_types=PRIVATE"
            - "-log_debug_stdout"
            - "-instances=zones-cloud:us-central1:grafana=tcp:3306"
          securityContext:
            runAsNonRoot: true
      volumes:
        - name: grafana-config
          configMap:
            name: grafana-config
        - name: grafana-datasource
          configMap:
            name: grafana-datasource
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: default
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "biomes-internal"}'
spec:
  clusterIP: None
  selector:
    app: grafana
  ports:
    - name: http
      port: 3000
